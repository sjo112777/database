-- MySQL Script generated by MySQL Workbench
-- Tue Feb 25 15:14:36 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Shopping
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Shopping
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Shopping` DEFAULT CHARACTER SET utf8 ;
USE `Shopping` ;

-- -----------------------------------------------------
-- Table `Shopping`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Shopping`.`User` (
  `userId` VARCHAR(20) NOT NULL,
  `userName` VARCHAR(20) NOT NULL,
  `userBirth` CHAR(10) NOT NULL,
  `userGender` CHAR(1) NOT NULL,
  `userHp` CHAR(13) NOT NULL,
  `userEmail` VARCHAR(45) NULL,
  `userPoint` INT NULL DEFAULT 0,
  `userLevel` TINYINT NULL DEFAULT 1,
  `userAddr` VARCHAR(100) NULL,
  `userRegDate` DATETIME NULL,
  UNIQUE INDEX `userHp_UNIQUE` (`userHp` ASC) VISIBLE,
  UNIQUE INDEX `userEmail_UNIQUE` (`userEmail` ASC) VISIBLE,
  PRIMARY KEY (`userId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Shopping`.`Order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Shopping`.`Order` (
  `orderNo` CHAR(11) NOT NULL,
  `userId` VARCHAR(20) NOT NULL,
  `orderTotalPrice` INT NOT NULL,
  `orderAddr` VARCHAR(255) NOT NULL,
  `orderStatus` TINYINT NULL DEFAULT 0,
  `orderDate` DATETIME NOT NULL,
  PRIMARY KEY (`orderNo`, `userId`),
  INDEX `fk_Order_User1_idx` (`userId` ASC) VISIBLE,
  CONSTRAINT `fk_Order_User1`
    FOREIGN KEY (`userId`)
    REFERENCES `Shopping`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Shopping`.`Category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Shopping`.`Category` (
  `cateNo` INT NOT NULL,
  `cateName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`cateNo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Shopping`.`Seller`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Shopping`.`Seller` (
  `sellerNo` INT NOT NULL,
  `sellerBizName` VARCHAR(45) NOT NULL,
  `sellerPhone` VARCHAR(20) NOT NULL,
  `sellerManager` VARCHAR(20) NOT NULL,
  `sellerAddr` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`sellerNo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Shopping`.`Product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Shopping`.`Product` (
  `prodNo` INT NOT NULL,
  `cateNo` INT NOT NULL,
  `sellerNo` INT NOT NULL,
  `prodName` VARCHAR(20) NOT NULL,
  `prodPrice` INT NOT NULL,
  `prodStock` INT NULL DEFAULT 0,
  `prodSold` INT NULL DEFAULT 0,
  `prodDiscount` TINYINT NULL DEFAULT 0,
  PRIMARY KEY (`prodNo`, `cateNo`),
  INDEX `fk_Product_Category1_idx` (`cateNo` ASC) VISIBLE,
  INDEX `fk_Product_Seller1_idx` (`sellerNo` ASC) VISIBLE,
  CONSTRAINT `fk_Product_Category1`
    FOREIGN KEY (`cateNo`)
    REFERENCES `Shopping`.`Category` (`cateNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Product_Seller1`
    FOREIGN KEY (`sellerNo`)
    REFERENCES `Shopping`.`Seller` (`sellerNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Shopping`.`Cart`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Shopping`.`Cart` (
  `cartNo` INT NOT NULL AUTO_INCREMENT,
  `userId` VARCHAR(20) NOT NULL,
  `prodNo` INT NOT NULL,
  `cartProdCount` INT NULL DEFAULT 1,
  `cartProdDate` DATETIME NOT NULL,
  PRIMARY KEY (`cartNo`, `userId`, `prodNo`),
  INDEX `fk_Cart_User1_idx` (`userId` ASC) VISIBLE,
  INDEX `fk_Cart_Product1_idx` (`prodNo` ASC) VISIBLE,
  CONSTRAINT `fk_Cart_User1`
    FOREIGN KEY (`userId`)
    REFERENCES `Shopping`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Cart_Product1`
    FOREIGN KEY (`prodNo`)
    REFERENCES `Shopping`.`Product` (`prodNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Shopping`.`Point`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Shopping`.`Point` (
  `pointNo` INT NOT NULL AUTO_INCREMENT,
  `userId` VARCHAR(20) NOT NULL,
  `point` INT NOT NULL,
  `pointDesc` VARCHAR(45) NOT NULL,
  `pointDate` DATETIME NOT NULL,
  PRIMARY KEY (`pointNo`, `userId`),
  INDEX `fk_Point_User_idx` (`userId` ASC) VISIBLE,
  CONSTRAINT `fk_Point_User`
    FOREIGN KEY (`userId`)
    REFERENCES `Shopping`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Shopping`.`OrderItem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Shopping`.`OrderItem` (
  `itemNo` INT NOT NULL AUTO_INCREMENT,
  `orderNo` CHAR(11) NOT NULL,
  `prodNo` INT NOT NULL,
  `itemPrice` INT NOT NULL,
  `itemDiscount` TINYINT NOT NULL,
  `itemCount` INT NULL DEFAULT 1,
  PRIMARY KEY (`itemNo`, `orderNo`, `prodNo`),
  INDEX `fk_OrderItem_Order1_idx` (`orderNo` ASC) VISIBLE,
  INDEX `fk_OrderItem_Product1_idx` (`prodNo` ASC) VISIBLE,
  CONSTRAINT `fk_OrderItem_Order1`
    FOREIGN KEY (`orderNo`)
    REFERENCES `Shopping`.`Order` (`orderNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_OrderItem_Product1`
    FOREIGN KEY (`prodNo`)
    REFERENCES `Shopping`.`Product` (`prodNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
